{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","onSubmit","e","preventDefault","trim","length","c","type","name","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"yMAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OACI,sBAAMC,SATW,SAAAC,GACjBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,IACtBR,GAAc,SAAAS,GAAC,OAAKP,EAAMK,QAAX,mBAAsBE,OACrCN,EAAS,MAKb,SACI,uBACIO,KAAK,OACLC,KAAK,WACLT,MAAOA,EACPU,YAAY,eACZC,SAnBc,SAAAR,GACtBF,EAASE,EAAES,OAAOZ,a,+BCQXa,EAfF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACI,mCADJ,SAIFC,EAJE,iDAI8CC,UAAUH,GAJxD,6BACI,oCADJ,SAKgBI,MAAMF,GALtB,cAKFG,EALE,gBAMaA,EAAUC,OANvB,uBAMDC,EANC,EAMDA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAAEC,GAAID,EAAIC,GAAIC,MAAOF,EAAIE,MAAOV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAChGa,QAAQC,IAAI,QAASR,GARb,kBASDA,GATC,2DAWD,IAXC,0DAAH,sDCiBES,EAdK,SAAC,GAAwB,IAAtBf,EAAqB,EAArBA,IAAKU,EAAgB,EAAhBA,MAAgB,EAATD,GAC/B,OACI,sBAAKO,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCeDS,EAlBC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC/BsB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAWtC,OALAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAAEjB,KAAMoB,EAAML,SAAS,SACnD,CAACtB,IAEGuB,EDT2BK,CAAa5B,GAAvCsB,EADsB,EACtBA,QAAeT,EADO,EACbN,KAEjB,OACI,qCACI,oBAAIW,UAAU,oCAAd,SAAmDlB,IACjDsB,GAAW,mBAAGJ,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SACKL,EAAOJ,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEO1CkB,EAfM,WAAO,IAAD,EACa5C,mBAAS,CAAC,cADvB,mBAChB6C,EADgB,KACJ9C,EADI,KAGvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACM8C,EAAWrB,KAAI,SAAAsB,GAAG,OAAI,cAAC,EAAD,CAAmB/B,SAAU+B,GAAfA,Y,YCPtDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d128856e.chunk.js","sourcesContent":["import { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n    const [value, setValue] = useState('')\n\n    const handleInputChange = e => {\n        setValue(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (value.trim().length > 2) {\n            setCategories(c => [value.trim(), ...c])\n            setValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type='text'\n                name='category'\n                value={value}\n                placeholder='CategorÃ­a'\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","const getGifs = async (category) => {\n    const api_key = 'zCtudgAhUOymBXkrwNmYwma8nYw56zgl'\n\n    try {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${api_key}`\n        const respuesta = await fetch(url)\n        const {data} = await respuesta.json()\n        const gifs = data.map(img => ({ id: img.id, title: img.title, url: img.images?.downsized_medium.url}))            \n        console.log('gifs:', gifs)\n        return gifs\n    } catch (error) {\n        return []\n    }\n}\n\nexport default getGifs\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GifGridItem = ({ url, title, id }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}\n\nexport default GifGridItem\n","import PropTypes from 'prop-types'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem'\n\nconst GifGrid = ({ category }) => {\n    const { loading, data: images } = useFetchGifs(category)\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n            <div className=\"card-grid\">\n                {images.map(img => <GifGridItem key={img.id} {...img} />)}\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react'\nimport getGifs from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => setState({ data: imgs, loading: false}))\n    }, [category])\n\n    return state\n}\n","import { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One Punch'])\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ul>\n                { categories.map(cat => <GifGrid key={cat} category={cat} />)}\n            </ul>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport 'animate.css/animate.min.css'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}